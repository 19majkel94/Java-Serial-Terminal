package pl.polsl.pl.java.serial.terminal.view;

import java.awt.Frame;

import javax.swing.DefaultComboBoxModel;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

import pl.polsl.pl.java.serial.terminal.main.Controler;

/**
 * Auxiliary GUI class to setup conection congifuration.
 * Has field with serial port parameters to setup and button to save it in controler.
 * 
 * @author Michał Lytek
 */
public class ConfigurationDialog extends javax.swing.JDialog {

    /** Instance of Controler class to handle setting up connection parameter request */
    private Controler controler;
    
    /**
     * Creates new form ConfigurationDialog.
     * 
     * @param parent the parent Frame insance to disable it clickability
     * @param modal the JDialog modality setting
     * @param controler the instance of controler to handle GUI request
     */
    public ConfigurationDialog(Frame parent, boolean modal, Controler controler) {
        super(parent, modal);
        this.controler = controler;
        
        //setup system look & feel
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException e) {
            System.err.println("Using the default look and feel.");
        }
        
        initComponents();
        postInitComponents();
    }
    
    /**
     * Custom field setup after Designer generated code initalization.
     */
    private void postInitComponents() {
        portComboBox.setModel(new DefaultComboBoxModel(controler.getAvaiablePortsNames()));

        customTerminatorTextField.setEditable(false);
        customTerminatorTextField.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void changedUpdate(DocumentEvent e) {
                limit();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                limit();
            }

            @Override
            public void insertUpdate(DocumentEvent e) {
                limit();
            }

            /**
             * Limit text field chars amount to 2.
             */
            public void limit() {
                SwingUtilities.invokeLater(() -> {
                    String fieldText = customTerminatorTextField.getText();
                    if (fieldText.length() > 0) {
                        saveButton.setEnabled(true);
                        if (fieldText.length() > 2) {
                            customTerminatorTextField.setText(fieldText.substring(0, 2));
                        }
                    } else {
                        saveButton.setEnabled(false);
                    }
                });
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        portComboBox = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        speedComboBox = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        signbitsComboBox = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        parityComboBox = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        stopBitsComboBox = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        flowControlComboBox = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        terminatorComboBox = new javax.swing.JComboBox<>();
        customTerminatorTextField = new javax.swing.JTextField();
        saveButton = new javax.swing.JButton();
        refreshAvaiablePortsButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Parametry połączenia");

        jLabel1.setText("Port:");

        portComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "COM1", "COM3", "COM4" }));

        jLabel2.setText("Prędkość (b/s):");

        speedComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "110", "300", "600", "1200", "4800", "9600", "14400", "19200", "38400", "57600", "115200", "128000", "256000" }));
        speedComboBox.setSelectedIndex(5);

        jLabel3.setText("Bity znaku:");

        signbitsComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "7", "8" }));

        jLabel4.setText("Kontrola parzystości:");

        parityComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Brak", "Parzystość", "Nieparzystość" }));

        jLabel5.setText("Bity stopu:");

        stopBitsComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2" }));

        jLabel6.setText("Kontrola przepływu:");

        flowControlComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Brak", "Sprzętowa (RTS/CTS)", "Programowa (XON/XOFF)" }));

        jLabel7.setText("Terminator:");

        terminatorComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Brak", "CR", "LF", "CR-LF", "Własny" }));
        terminatorComboBox.setSelectedIndex(2);
        terminatorComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                terminatorComboBoxActionPerformed(evt);
            }
        });

        saveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pl/polsl/pl/java/serial/terminal/view/images/save.png"))); // NOI18N
        saveButton.setText("Zapisz");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        refreshAvaiablePortsButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pl/polsl/pl/java/serial/terminal/view/images/refresh.png"))); // NOI18N
        refreshAvaiablePortsButton.setMargin(new java.awt.Insets(2, 4, 2, 4));
        refreshAvaiablePortsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshAvaiablePortsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(saveButton)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(parityComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(speedComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(signbitsComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(stopBitsComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(flowControlComboBox, 0, 189, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(terminatorComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(customTerminatorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(portComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(refreshAvaiablePortsButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(refreshAvaiablePortsButton, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(portComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(speedComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(signbitsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(parityComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(stopBitsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(flowControlComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(terminatorComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(customTerminatorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(saveButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Handle terminator combobox changes event.
     * When it is setted up to 4, it disables save button
     * and enables own terminator text field.
     * If it's not the 4 - it do the opposite.
     * 
     * @param evt is ignored
     */
    private void terminatorComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_terminatorComboBoxActionPerformed
        if (terminatorComboBox.getSelectedIndex() == 4) {
            customTerminatorTextField.setEditable(true);
            saveButton.setEnabled(false);
        } else {
            customTerminatorTextField.setEditable(false);
            saveButton.setEnabled(true);
        }
    }//GEN-LAST:event_terminatorComboBoxActionPerformed

    /**
     * Handle saving request from button.
     * It checks if user choosed own terminator
     * and parse combobox to necessary format.
     * 
     * @param evt is ignored
     */
    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        String terminator;
        if (terminatorComboBox.getSelectedIndex() == 4) {
            terminator = customTerminatorTextField.getText();
        } else {
            terminator = (String) terminatorComboBox.getSelectedItem();
        }
        
        controler.setupSerialPort(
            (String) portComboBox.getSelectedItem(),
            Integer.parseInt((String) speedComboBox.getSelectedItem()),
            Integer.parseInt((String) signbitsComboBox.getSelectedItem()),
            parityComboBox.getSelectedIndex(),
            Integer.parseInt((String) stopBitsComboBox.getSelectedItem()),
            flowControlComboBox.getSelectedIndex(),
            terminator
        );
        
        dispose();
    }//GEN-LAST:event_saveButtonActionPerformed

    /**
     * Reload list of avaiable serial ports in combobox on user request (button press).
     * 
     * @param evt is ignored
     */
    private void refreshAvaiablePortsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshAvaiablePortsButtonActionPerformed
        portComboBox.setModel(new DefaultComboBoxModel(controler.getAvaiablePortsNames()));
    }//GEN-LAST:event_refreshAvaiablePortsButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField customTerminatorTextField;
    private javax.swing.JComboBox<String> flowControlComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JComboBox<String> parityComboBox;
    private javax.swing.JComboBox<String> portComboBox;
    private javax.swing.JButton refreshAvaiablePortsButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JComboBox<String> signbitsComboBox;
    private javax.swing.JComboBox<String> speedComboBox;
    private javax.swing.JComboBox<String> stopBitsComboBox;
    private javax.swing.JComboBox<String> terminatorComboBox;
    // End of variables declaration//GEN-END:variables
}
